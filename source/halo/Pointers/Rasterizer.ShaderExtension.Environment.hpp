/*
	Yelo: Open Sauce SDK
		Halo 1 (CE) Edition

	See license\OpenSauce\Halo1_CE for specific license information
*/
#pragma once

#if !PLATFORM_IS_DEDI
#include "Pointers/1.10/HaloCE_110_Runtime.Rasterizer.ShaderExtension.inl"
#include "Pointers/1.10/HaloCE_110_Runtime_Manual.Rasterizer.ShaderExtension.inl"
#endif

#include <YeloLib/memory/memory_interface_base.hpp>
#include <Memory/MemoryInterface.hpp>

namespace Yelo
{
	namespace Rasterizer
	{
		namespace ShaderExtension
		{
			namespace Environment
			{
				FUNC_PTR(RASTERIZER_ENVIRONMENT_PS_INDEX_ENVIRONMENT_LIGHTMAP_HOOK, K_RASTERIZER_ENVIRONMENT_PS_INDEX_ENVIRONMENT_LIGHTMAP_HOOK, FUNC_PTR_NULL);
				FUNC_PTR(RASTERIZER_ENVIRONMENT_PS_INDEX_ENVIRONMENT_LIGHTMAP_RETN, K_RASTERIZER_ENVIRONMENT_PS_INDEX_ENVIRONMENT_LIGHTMAP_RETN, FUNC_PTR_NULL);

				FUNC_PTR(STRUCTURE_RENDER_DYNAMIC_TRIANGLES_COUNT_REF, K_STRUCTURE_RENDER_DYNAMIC_TRIANGLES_COUNT_REF, FUNC_PTR_NULL);
				FUNC_PTR(STRUCTURE_RENDER_DYNAMIC_TRIANGLES_BUFFER_REF, K_STRUCTURE_RENDER_DYNAMIC_TRIANGLES_BUFFER_REF, FUNC_PTR_NULL);
				FUNC_PTR(STRUCTURE_RENDER_PASS_FUNC, K_STRUCTURE_RENDER_PASS_FUNC, FUNC_PTR_NULL);
				FUNC_PTR(LIGHTS_RENDER_SPECULAR_CALL, K_LIGHTS_RENDER_SPECULAR_CALL, FUNC_PTR_NULL);
				FUNC_PTR(LIGHTS_RENDER_SPECULAR_FUNC, K_LIGHTS_RENDER_SPECULAR_FUNC, FUNC_PTR_NULL);
				FUNC_PTR(RASTERIZER_ENVIRONMENT_LIGHTMAP_BEGIN_FUNC, K_RASTERIZER_ENVIRONMENT_LIGHTMAP_BEGIN_FUNC, FUNC_PTR_NULL);
				FUNC_PTR(RASTERIZER_ENVIRONMENT_LIGHTMAP_DRAW_FUNC, K_RASTERIZER_ENVIRONMENT_LIGHTMAP_DRAW_FUNC, FUNC_PTR_NULL);
				FUNC_PTR(RASTERIZER_ENVIRONMENT_LIGHTMAP_END_FUNC, K_RASTERIZER_ENVIRONMENT_LIGHTMAP_END_FUNC, FUNC_PTR_NULL);
			}
		}
	}
}
