/*
	Yelo: Open Sauce SDK
		Halo 1 (CE) Edition

	See license\OpenSauce\Halo1_CE for specific license information
*/

#if !PLATFORM_IS_DEDI
#include "Memory/1.10/Pointers/HaloCE_110_Runtime.OpenSauce.inl"
#include "Memory/1.10/Pointers/HaloCE_110_Runtime_Manual.OpenSauce.inl"
#else
#include "Memory/1.10/Pointers/HaloCE_110_Dedi.OpenSauce.inl"
#endif

//////////////////////////////////////////////////////////////////////////
// Memory/FunctionInterface.cpp
#if __EL_INCLUDE_FILE_ID == __EL_MEMORY_FUNCTION_INTERFACE
	FUNC_PTR(RENDER_SKY,												K_RENDER_SKY, FUNC_PTR_NULL);
	FUNC_PTR(RENDER_WINDOW_CALL_HOOK_RENDER_SKY,						K_RENDER_WINDOW_CALL_HOOK_RENDER_SKY, FUNC_PTR_NULL);

	FUNC_PTR(RENDER_OBJECTS,											K_RENDER_OBJECTS, FUNC_PTR_NULL);
	FUNC_PTR(RENDER_WINDOW_CALL_HOOK_RENDER_OBJECTS,					K_RENDER_WINDOW_CALL_HOOK_RENDER_OBJECTS, FUNC_PTR_NULL);

	FUNC_PTR(STRUCTURE_RENDER_LIGHTMAPS,								K_STRUCTURE_RENDER_LIGHTMAPS, FUNC_PTR_NULL);
	FUNC_PTR(RENDER_WINDOW_CALL_HOOK_STRUCTURE_RENDER_LIGHTMAPS,		K_RENDER_WINDOW_CALL_HOOK_STRUCTURE_RENDER_LIGHTMAPS, FUNC_PTR_NULL);

	FUNC_PTR(WEATHER_PARTICLE_SYSTEMS_RENDER,							K_WEATHER_PARTICLE_SYSTEMS_RENDER, FUNC_PTR_NULL);
	FUNC_PTR(RENDER_WINDOW_CALL_HOOK_WEATHER_PARTICLE_SYSTEMS_RENDER,	K_RENDER_WINDOW_CALL_HOOK_WEATHER_PARTICLE_SYSTEMS_RENDER, FUNC_PTR_NULL);

	FUNC_PTR(RENDER_UI_WIDGETS,											K_RENDER_UI_WIDGETS, FUNC_PTR_NULL);
	FUNC_PTR(RENDER_WINDOW_CALL_HOOK_RENDER_UI_WIDGETS,					K_RENDER_WINDOW_CALL_HOOK_RENDER_UI_WIDGETS, FUNC_PTR_NULL);

	FUNC_PTR(RENDER_UI_CURSOR,											K_RENDER_UI_CURSOR, FUNC_PTR_NULL);
	FUNC_PTR(CALL_HOOK_RENDER_UI_CURSOR,								K_CALL_HOOK_RENDER_UI_CURSOR, FUNC_PTR_NULL);

	FUNC_PTR(INTERFACE_DRAW_SCREEN,										K_INTERFACE_DRAW_SCREEN, FUNC_PTR_NULL);
	FUNC_PTR(RENDER_WINDOW_CALL_HOOK_INTERFACE_DRAW_SCREEN,				K_RENDER_WINDOW_CALL_HOOK_INTERFACE_DRAW_SCREEN, FUNC_PTR_NULL);

	FUNC_PTR(UPDATE_UI_WIDGETS,											K_UPDATE_UI_WIDGETS, FUNC_PTR_NULL);
	FUNC_PTR(CALL_HOOK_UPDATE_UI_WIDGETS,								K_CALL_HOOK_UPDATE_UI_WIDGETS, FUNC_PTR_NULL);


//////////////////////////////////////////////////////////////////////////
// Common/GameSystems.cpp
#elif __EL_INCLUDE_FILE_ID == __EL_COMMON_GAME_SYSTEMS
	FUNC_PTR(QUERY_EXITFLAG_REG_CALL,									DUO_PTR(K_QUERY_EXITFLAG_REG_CALL));
	FUNC_PTR(QUERY_EXITFLAG_REG,										DUO_PTR(K_QUERY_EXITFLAG_REG));
	FUNC_PTR(RELEASE_RESOURCES_ON_EXIT_CALL,							DUO_PTR(K_RELEASE_RESOURCES_ON_EXIT_CALL));
	FUNC_PTR(RELEASE_RESOURCES_ON_EXIT,									DUO_PTR(K_RELEASE_RESOURCES_ON_EXIT));

	DATA_PTR(PE_DATA_SIZE,												0x215000, 0x171000);


//////////////////////////////////////////////////////////////////////////
// Common/DebugDump.cpp
#elif __EL_INCLUDE_FILE_ID == __EL_COMMON_DEBUG_DUMP
	FUNC_PTR(WINMAIN_EXCEPTION_FILTER,									DUO_PTR(K_WINMAIN_EXCEPTION_FILTER));
	FUNC_PTR(WINMAIN_EXCEPTION_FILTER_CALL,								DUO_PTR(K_WINMAIN_EXCEPTION_FILTER_CALL));

	FUNC_PTR(RASTERIZER_DX9_SAVE_GAMMA,									K_RASTERIZER_DX9_SAVE_GAMMA, FUNC_PTR_NULL);
	FUNC_PTR(RASTERIZER_WINDOWS_PRESENT_FRAME,							K_RASTERIZER_WINDOWS_PRESENT_FRAME, FUNC_PTR_NULL);
	FUNC_PTR(SOUND_STOP_ALL,											DUO_PTR(K_SOUND_STOP_ALL));

	ENGINE_PTR(void**, VIRTUALPROTECT_LOCK,								DUO_PTR(K_VIRTUALPROTECT_LOCK))
	ENGINE_PTR(DWORD, VIRTUALPROTECT_OLD_PROTECT,						DUO_PTR(K_VIRTUALPROTECT_OLD_PROTECT));

#else
	#error Undefined engine layout include for: __EL_INCLUDE_OPEN_SAUCE
#endif