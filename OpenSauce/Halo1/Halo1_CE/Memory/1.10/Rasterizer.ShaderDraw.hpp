/*
	Yelo: Open Sauce SDK
		Halo 1 (CE) Edition

	See license\OpenSauce\Halo1_CE for specific license information
*/
#pragma once

#if !PLATFORM_IS_DEDI
#include "Memory/1.10/Pointers/HaloCE_110_Runtime.Rasterizer.ShaderDraw.inl"
#endif

#include <Memory/MemoryInterface.hpp>
#include <yelolib/memory/memory_interface_base.hpp>

namespace Yelo
{
	namespace Rasterizer
	{
		namespace ShaderDraw
		{
			ENGINE_PTR(void*, RASTERIZER_ENVIRONMENT_DRAW_LIGHTMAP_SHADER_DRAW__DRAW_SHADER_LIGHTMAP_PTR, K_RASTERIZER_ENVIRONMENT_DRAW_LIGHTMAP_SHADER_DRAW__DRAW_SHADER_LIGHTMAP_PTR, PTR_NULL);
			ENGINE_PTR(void*, RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_DRAW__DRAW_SHADER_ENVIRONMENT_PTR, K_RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_DRAW__DRAW_SHADER_ENVIRONMENT_PTR, PTR_NULL);
			ENGINE_PTR(void*, RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_DRAW__DRAW_SHADER_MODEL_PTR, K_RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_DRAW__DRAW_SHADER_MODEL_PTR, PTR_NULL);

			FUNC_PTR(RASTERIZER_ENVIRONMENT_DRAW_LIGHTMAP, K_RASTERIZER_ENVIRONMENT_DRAW_LIGHTMAP, FUNC_PTR_NULL);
			FUNC_PTR(RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_ENVIRONMENT, K_RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_ENVIRONMENT, FUNC_PTR_NULL);
			FUNC_PTR(RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_MODEL, K_RASTERIZER_MODEL_DRAW_ENVIRONMENT_SHADER_MODEL, FUNC_PTR_NULL);
		}
	}
}
