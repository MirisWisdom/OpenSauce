/*
	Yelo: Open Sauce SDK
		Halo 1 (CE) Edition

	See license\OpenSauce\Halo1_CE for specific license information
*/

//////////////////////////////////////////////////////////////////////////
// Objects.cpp
#if __EL_INCLUDE_FILE_ID == __EL_OBJECTS_OBJECTS
	ENGINE_PTR(s_object_type_definition**, object_type_definitions,				0x6376A4, 0x5AD07C);
	ENGINE_PTR(s_widget_type_definition*,  widget_type_definitions,				0x6376D8, 0x5AD0B0);

	ENGINE_DPTR(widget_data_t, widgets,											0x7FB2B8, 0x6C6938);
	ENGINE_DPTR(flag_data_t, flags,												0x7FB2C8, 0x6C6948);
	ENGINE_DPTR(antenna_data_t, antennas,										0x7FB2CC, 0x6C694C);
	ENGINE_DPTR(glow_data_t, glow,												0x7FB2C0, 0x6C6940);
	ENGINE_DPTR(glow_particles_data_t, glow_particles,							0x7FB2C4, 0x6C6944);
	ENGINE_DPTR(light_volumes_data_t, light_volumes,							0x653BD8, 0x5C5B10);
	ENGINE_DPTR(lightnings_data_t, lightnings,									0x653BDC, 0x5C5B14);

	ENGINE_DPTR(Render::cached_object_render_states_data_t, cached_object_render_states,	0x75E00C, 0x629688);
	ENGINE_DPTR(s_unit_globals_data, unit_globals,								0x68A808, 0x5F3050);
	ENGINE_DPTR(device_groups_data_t, device_groups,							0x815CD0, 0x6E1BD0);
	ENGINE_DPTR(object_header_data_t, object_header,							0x7FB2D0, 0x6C6950);
	ENGINE_DPTR(s_objects_pool_data, objects_pool,								0x653B1C, 0x5C5A54);
	ENGINE_DPTR(s_object_globals_data, object_globals,							0x653B24, 0x5C5A5C);
	ENGINE_DPTR(s_object_name_list_data, object_name_list,						0x653B20, 0x5C5A58);

	ENGINE_DPTR(collideable_object_data, collideable_object,					0x7FB2F0, 0x6C6970);
	ENGINE_DPTR(cluster_collideable_object_reference_data_t, cluster_collideable_object_reference,	0x7FB2F4, 0x6C6974);
	ENGINE_DPTR(collideable_object_cluster_reference_data_t, collideable_object_cluster_reference,	0x7FB2F8, 0x6C6978);
	ENGINE_DPTR(noncollideable_object_data, noncollideable_object,				0x7FB2E0, 0x6C6960);
	ENGINE_DPTR(cluster_noncollideable_object_reference_data_t, cluster_noncollideable_object_reference,0x7FB2E4, 0x6C6964);
	ENGINE_DPTR(noncollideable_object_cluster_reference_data_t, noncollideable_object_cluster_reference,0x7FB2E8, 0x6C6968);

	ENGINE_PTR(size_t, object_memory_pool_allocation_size,						0x4F875D, 0x4DF74D);

	FUNC_PTR(OBJECT_TYPES_PLACE_ALL_MOD_VEHI_REMAP,		0x4F7833, 0x4DE893);
	FUNC_PTR(OBJECTS_UPDATE__OBJECT_IN_PLAYER_PVS_NOP1,	0x4F8B84, PTR_NULL);
	FUNC_PTR(OBJECTS_UPDATE__OBJECT_IN_PLAYER_PVS_NOP2,	0x4F8C1A, PTR_NULL);
	FUNC_PTR(OBJECTS_UPDATE_CALL,						0x45C398, 0x458D48);
	FUNC_PTR(OBJECTS_UPDATE_HOOK,						0x4F8D3E, 0x4DFCEF);
	FUNC_PTR(OBJECTS_GARBAGE_COLLECTION,				0x4FD8C0, 0x4E47B0);
	FUNC_PTR(OBJECT_DAMAGE_OBJECT_BODY_HOOK,			0x4F347A, 0x4DC6DA);
	FUNC_PTR(BIPED_UPDATE_MOVING_HOOK,					0x561B66, 0x510586);
	FUNC_PTR(BIPED_JUMP_MOD_STUN_PENALTY_FIELD_REF,		0x56283E, 0x51125E);
	FUNC_PTR(OBJECT_DEPLETE_BODY_KILL_CHILD_HOOK,		0x4F1753, 0x4DA9B3);
	FUNC_PTR(OBJECT_DEPLETE_BODY_KILL_CHILD_RETN,		0x4F175A, 0x4DA9BA);

	static const uintptr_t OBJECT_DAMAGE_AFTERMATH__CALC_ACCEL_HOOK =		PLATFORM_VALUE(0x4F39EB, 0x4DCC4B);
	static const uintptr_t OBJECT_DAMAGE_AFTERMATH__CALC_ACCEL_HOOK_RETURN =PLATFORM_VALUE(0x4F3A22, 0x4DCC82);

	static const uintptr_t OBJECT_DAMAGE_AFTERMATH__UNIT_VALIDATE_INST_ACCEL_HOOK =					PLATFORM_VALUE(0x4F3B08, 0x4DCD68);
	static const uintptr_t OBJECT_DAMAGE_AFTERMATH__UNIT_VALIDATE_INST_ACCEL_HOOK_RETURN =			PLATFORM_VALUE(0x4F3B1B, 0x4DCD7B);
	static const uintptr_t OBJECT_DAMAGE_AFTERMATH__UNIT_VALIDATE_INST_ACCEL_HOOK_RETURN_INVALID =	PLATFORM_VALUE(0x4F3B88, 0x4DCDE8);

#if PLATFORM_IS_USER
	namespace render_objects_mods
	{
		static uintptr_t K_MAXIMUM_RENDERED_OBJECTS_REFS_32bit[] = {
			0x45B60C+1,
			0x512755+1,	0x512789+1,
		};
		static uintptr_t K_MAXIMUM_RENDERED_OBJECTS_REFS_16bit[] = {
			0x5127BF+7,
		};
		static uintptr_t K_RENDER_OBJECT_GLOBALS__RENDERED_OBJECTS_REFS[] = {
			0x512613+3,
			0x51275A+1, 0x51279E+3,
			0x5127F3+3,
		};
		
		FUNC_PTR(OBJECT_NEW_SET_SHADOW_FLAG_HOOK,						0x4F931A, PTR_NULL);
		FUNC_PTR(OBJECT_NEW_SET_SHADOW_FLAG_RETN,						0x4F9327, PTR_NULL);
		static void* K_OBJECT_DISABLE_SHADOW_CAST_OVERRIDES[] = {
			CAST_PTR(void*, 0x44C20A), CAST_PTR(void*, 0x4FE4CA), CAST_PTR(void*, 0x552239)
		};
	};
#endif

	namespace Weapon
	{
		FUNC_PTR(FIRST_PERSON_WEAPON_RENDER_UPDATE,							0x4953C0, FUNC_PTR_NULL);
		FUNC_PTR(RENDER_WINDOW_CALL_HOOK_FIRST_PERSON_WEAPON_RENDER_UPDATE,	0x50FD07, FUNC_PTR_NULL);
	};


//////////////////////////////////////////////////////////////////////////
// Equipment.cpp
#elif __EL_INCLUDE_FILE_ID == __EL_OBJECTS_EQUIPMENT


//////////////////////////////////////////////////////////////////////////
// Units.cpp
#elif __EL_INCLUDE_FILE_ID == __EL_OBJECTS_UNITS

	static uint32 K_UNIT_ZOOM_LEVEL_OFFSET_REFS[] = {
		PLATFORM_VALUE(0x459F81, 0x456AF1), PLATFORM_VALUE(0x55D7A9, 0x50C209), PLATFORM_VALUE(0x565CD9, 0x514669),
		PLATFORM_VALUE(0x5667AD, 0x51513D), PLATFORM_VALUE(0x5667BB, 0x51514B), PLATFORM_VALUE(0x566849, 0x5151D9),
		PLATFORM_VALUE(0x566D52, 0x5156E2), PLATFORM_VALUE(0x5694EA, 0x517E7A), PLATFORM_VALUE(0x569556, 0x517EE6),
		PLATFORM_VALUE(0x56964E, 0x517FDE),
	};
	static uint32 K_UNIT_DESIRED_ZOOM_LEVEL_OFFSET_REFS[] = {
		PLATFORM_VALUE(0x473DE1, 0x46B8E1), PLATFORM_VALUE(0x55EDD4, 0x50D824), PLATFORM_VALUE(0x565CDF, 0x51466F),
		PLATFORM_VALUE(0x5667A7, 0x515137), PLATFORM_VALUE(0x567562, 0x515EF2), PLATFORM_VALUE(0x56955D, 0x517EED),
	};

	static uint32 K_NUMBER_OF_UNIT_GRENADE_TYPES_REFS[] = {
		PLATFORM_VALUE(0x476B4A, 0x46E5CA)+1, PLATFORM_VALUE(0x47F2FC, 0x476E7C)+1, PLATFORM_VALUE(0x4B51F9, 0x4A1649)+1, 
		PLATFORM_VALUE(0x566774, 0x515104)+1, 
#if PLATFORM_IS_USER
		PLATFORM_VALUE(0x4B665C, NULL)+1, 
#endif
		PLATFORM_VALUE(0x572CA6, 0x5213A6)+4, 
	};
	static uint32 K_MAXIMUM_UNIT_GRENADE_INDEX_REFS[] = {
		PLATFORM_VALUE(0x474BF4, 0x46C6F4)+2, // 16bit
		PLATFORM_VALUE(0x56D703, 0x51BE53)+1, // 32bit
		PLATFORM_VALUE(0x56D70F, 0x51BE5F)+3, // 8bit
	};

	FUNC_PTR(ACTOR_DIED_UNIT_GRENADE_COUNT_MOD,					0x428D35, 0x428D45);
	FUNC_PTR(PLAYER_ADD_EQUIPMENT_UNIT_GRENADE_COUNT_MOD,		0x476AC7, 0x46E547);
	FUNC_PTR(BIPED_NEW_FROM_NETWORK_UNIT_GRENADE_COUNT_MOD,		0x55EE1A, 0x50D86A);
	FUNC_PTR(BIPED_UPDATE_BASELINE_UNIT_GRENADE_COUNT_MOD1,		0x55EEB6, 0x50D906);
	FUNC_PTR(BIPED_UPDATE_BASELINE_UNIT_GRENADE_COUNT_MOD2,		0x55EED4, 0x50D924);
	FUNC_PTR(BIPED_BUILD_UPDATE_DELTA_UNIT_GRENADE_COUNT_MOD1,	0x55EFDF, 0x50DA2F);
	FUNC_PTR(BIPED_BUILD_UPDATE_DELTA_UNIT_GRENADE_COUNT_MOD2,	0x55EFF5, 0x50DA45);
	FUNC_PTR(BIPED_PROCESS_UPDATE_DELTA_UNIT_GRENADE_COUNT_MOD,	0x55F1A6, 0x50DBF6);
	FUNC_PTR(BIPED_UPDATE_CHECK_PARENT_UNIT_TYPE,				0x55CBCA, 0x50B62A);
	FUNC_PTR(UNIT_DAMAGE_AFTERMATH_CALL,						0x4F3C27, 0x4DCE87);

	//////////////////////////////////////////////////////////////////////////
	// Units.SeatBoarding
	FUNC_PTR(UNIT_CAN_ENTER_SEAT_HOOK,							0x56A310, 0x518CA0);

	//////////////////////////////////////////////////////////////////////////
	// Units.SeatDamage
	FUNC_PTR(BIPED_SEATED_MELEE_HOOK,							0x55D862, 0x50C2C2);
	FUNC_PTR(BIPED_SEATED_MELEE_RETN,							0x55D869, 0x50C2C9);
	FUNC_PTR(UNIT_THROW_GRENADE_RELEASE_HOOK,					0x569083, 0x517A13);
	FUNC_PTR(WEAPON_PREVENTS_GRENADE_THROWING_HOOK,				0x571E31, 0x520531);
	FUNC_PTR(WEAPON_PREVENTS_GRENADE_THROWING_RETN,				0x571E36, 0x520536);

	//////////////////////////////////////////////////////////////////////////
	// Units.Animations
	FUNC_PTR(ANIMATION_STATE_DEFINED_KEYFRAME_HOOK,				0x56905F, 0x5179EF);
	FUNC_PTR(ANIMATION_STATE_DEFINED_KEYFRAME_STOCK_RETN,		0x569066, 0x5179F6);
	FUNC_PTR(ANIMATION_STATE_DEFINED_KEYFRAME_SKIP_RETN,		0x569287, 0x517C17);
	
	FUNC_PTR(ANIMATION_STATE_FINAL_KEYFRAME_HOOK,				0x5690B4, 0x517A44);
	FUNC_PTR(ANIMATION_STATE_FINAL_KEYFRAME_STOCK_RETN,			0x5690BB, 0x517A4B);
	FUNC_PTR(ANIMATION_STATE_FINAL_KEYFRAME_SKIP_RETN,			0x569274, 0x517C04);

	static void** K_UNIT_ANIMATION_STATE_INTERRUPTABLE_CALLS[] = {
		CAST_PTR(void**, PLATFORM_VALUE(0x569010-0x30, 0x5179A0-0x30)), 
		CAST_PTR(void**, PLATFORM_VALUE(0x56936C-0x30, 0x517CFC-0x30)),  
		CAST_PTR(void**, PLATFORM_VALUE(0x56AC38-0x30, 0x5195C8-0x30))
	};
	static void** K_UNIT_ANIMATION_BUSY_CALLS[] = {
		CAST_PTR(void**, PLATFORM_VALUE(0x40B5EA, 0x40B5FA)), 
		CAST_PTR(void**, PLATFORM_VALUE(0x4343A8, 0x4343B8)),  
		CAST_PTR(void**, PLATFORM_VALUE(0x55D045-0x30, 0x50BAA5-0x30)),
		CAST_PTR(void**, PLATFORM_VALUE(0x5666FF-0x30, 0x51508F-0x30)),
		CAST_PTR(void**, PLATFORM_VALUE(0x56675B-0x30, 0x5150EB-0x30)),
		CAST_PTR(void**, PLATFORM_VALUE(0x566D56-0x30, 0x5156E6-0x30)),
		CAST_PTR(void**, PLATFORM_VALUE(0x56B788-0x30, 0x51A118-0x30)),
		CAST_PTR(void**, PLATFORM_VALUE(0x56EE6B-0x30, 0x51D5BB-0x30)),
		CAST_PTR(void**, PLATFORM_VALUE(0x56F7D5-0x30, 0x51DF25-0x30)),
		CAST_PTR(void**, PLATFORM_VALUE(0x570239-0x30, 0x51E989-0x30))
	};
	FUNC_PTR(UNIT_ANIMATION_STATE_LOOPS_CALL,		0x5692AA-0x30, 0x517C3A-0x30);
	FUNC_PTR(UNIT_ANIMATION_WEAPON_IK_CALL,			0x567FEE-0x30, 0x51697E-0x30);
	FUNC_PTR(UNIT_ANIMATION_VEHICLE_IK_CALL,		0x567F86-0x30, 0x516916-0x30);

#else
	#error Undefined engine layout include for: __EL_INCLUDE_OBJECTS
#endif